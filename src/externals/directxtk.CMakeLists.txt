cmake_minimum_required(VERSION 3.2 FATAL_ERROR)

if(APPLICATION)
    project(directxtk)

    set(DIRECTXTK_SOURCES
        # Inc
        Inc/CommonStates.h
        Inc/DDSTextureLoader.h
        Inc/DirectXHelpers.h
        Inc/Effects.h
        Inc/GamePad.h
        Inc/GeometricPrimitive.h
        Inc/GraphicsMemory.h
        Inc/Keyboard.h
        Inc/Model.h
        Inc/Mouse.h
        Inc/PostProcess.h
        Inc/PrimitiveBatch.h
        Inc/ScreenGrab.h
        Inc/SimpleMath.h
        Inc/SimpleMath.inl
        Inc/SpriteBatch.h
        Inc/SpriteFont.h
        Inc/VertexTypes.h
        Inc/WICTextureLoader.h

        # Src
        Src/AlignedNew.h
        Src/AlphaTestEffect.cpp
        Src/BasicEffect.cpp
        Src/BasicPostProcess.cpp
        Src/Bezier.h
        Src/BinaryReader.h
        Src/BinaryReader.cpp
        Src/CommonStates.cpp
        Src/ConstantBuffer.h
        Src/dds.h
        Src/DDSTextureLoader.cpp
        Src/DebugEffect.cpp
        Src/DemandCreate.h
        Src/DGSLEffect.cpp
        Src/DGSLEffectFactory.cpp
        Src/DualPostProcess.cpp
        Src/DualTextureEffect.cpp
        Src/BinaryReader.cpp
        Src/EffectCommon.h
        Src/EffectCommon.cpp
        Src/EffectFactory.cpp
        Src/EnvironmentMapEffect.cpp
        Src/GamePad.cpp
        Src/GeometricPrimitive.cpp
        Src/Geometry.h
        Src/Geometry.cpp
        Src/GraphicsMemory.cpp
        Src/Keyboard.cpp
        Src/LoaderHelpers.h
        Src/Model.cpp
        Src/ModelLoadCMO.cpp
        Src/ModelLoadSDKMESH.cpp
        Src/ModelLoadVBO.cpp
        Src/Mouse.cpp
        Src/NormalMapEffect.cpp
        Src/PBREffect.cpp
        Src/pch.h
        Src/pch.cpp
        Src/PlatformHelpers.h
        Src/PrimitiveBatch.cpp
        Src/ScreenGrab.cpp
        Src/SDKMesh.h
        Src/SharedResourcePool.h
        Src/SimpleMath.cpp
        Src/SkinnedEffect.cpp
        Src/SpriteBatch.cpp
        Src/SpriteFont.cpp
        Src/TeapotData.inc
        Src/ToneMapPostProcess.cpp
        Src/vbo.h
        Src/VertexTypes.cpp
        Src/WICTextureLoader.cpp
    )

    add_library(directxtk STATIC ${DIRECTXTK_SOURCES})

    target_include_directories(directxtk
        PUBLIC 
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/Inc>
        PRIVATE
            Inc
            Src
    )

    target_compile_options(directxtk
        PRIVATE
            /W3
            /fp:fast
            /GR
            /Yupch.h
            /MP

            $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

            # debug
            $<$<CONFIG:DEBUG>: /Od>

            # release
            $<$<CONFIG:RELEASE>: /MD /O2 /Gy /Oi>
    )

    target_compile_definitions(directxtk
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -D_WIN32_WINNT=0x0600
            -D_WIN7_PLATFORM_UPDATE
            -DWIN32
    )

    set_source_files_properties(Src/pch.cpp PROPERTIES COMPILE_FLAGS /Ycpch.h)

    # ide filters
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${DIRECTXTK_SOURCES})

elseif(TOOLS)
    # xwbtool
    project(xwbtool)

    set(XWBTOOL_SOURCES
        Audio/WAVFileReader.h
        Audio/WAVFileReader.cpp
        XWBtool/xwbtool.cpp
    )

    add_executable(xwbtool ${XWBTOOL_SOURCES})

    target_include_directories(xwbtool
        PUBLIC
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/Audio>
        PRIVATE
            Inc
            Src
    )

    target_compile_definitions(xwbtool
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -D_WIN32_WINNT=0x0602
            -DWIN32
    )

    # ide filters
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${XWBTOOL_SOURCES})

    # install
    install(TARGETS xwbtool
        RUNTIME DESTINATION ${TOOLS_DIR}/bin/xwbtool
    )

    # MakeSpriteFont
    project(MakeSpriteFont CSharp)

    set(MAKESPRITEFONT_SOURCES
        MakeSpriteFont/BitmapImporter.cs
        MakeSpriteFont/BitmapUtils.cs
        MakeSpriteFont/CharacterRegion.cs
        MakeSpriteFont/CommandLineOptions.cs
        MakeSpriteFont/CommandLineParser.cs
        MakeSpriteFont/Glyph.cs
        MakeSpriteFont/GlyphCropper.cs
        MakeSpriteFont/GlyphPacker.cs
        MakeSpriteFont/IFontImporter.cs
        MakeSpriteFont/SpriteFontWriter.cs
        MakeSpriteFont/Program.cs
        MakeSpriteFont/Properties/AssemblyInfo.cs
        MakeSpriteFont/TrueTypeImporter.cs
    )

    add_executable(MakeSpriteFont ${MAKESPRITEFONT_SOURCES})

    set_target_properties(MakeSpriteFont PROPERTIES VS_DOTNET_TARGET_FRAMEWORK_VERSION "v4.6.1")
    set_target_properties(MakeSpriteFont PROPERTIES VS_DOTNET_REFERENCE_System "System")
    set_target_properties(MakeSpriteFont PROPERTIES VS_DOTNET_REFERENCE_System.Drawing "System.Drawing")
    set_target_properties(MakeSpriteFont PROPERTIES VS_DOTNET_REFERENCES_COPY_LOCAL OFF)

    target_compile_options(MakeSpriteFont
        PRIVATE
            "/langversion:6"
    )

    # ide filters
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${MAKESPRITEFONT_SOURCES})

    # install
    install(TARGETS MakeSpriteFont
        RUNTIME DESTINATION ${TOOLS_DIR}/bin/MakeSpriteFont
    )
endif()

# set (XTK_AUDIO 1)
if (XTK_AUDIO)
    project(directxtkaudio)

    set(DIRECTXTKAUDIO_SOURCES
        Inc/Audio.h
        Audio/AudioEngine.cpp
        Audio/DynamicSoundEffectInstance.cpp
        Audio/SoundCommon.h
        Audio/SoundCommon.cpp
        Audio/SoundEffect.cpp
        Audio/SoundEffectInstance.cpp
        Audio/WaveBank.cpp
        Audio/WaveBankReader.h
        Audio/WaveBankReader.cpp
        Audio/WAVFileReader.h
        Audio/WAVFileReader.cpp
    )

    add_library(directxtkaudio STATIC ${DIRECTXTKAUDIO_SOURCES})

    target_compile_options(directxtkaudio
        PRIVATE
            /Wall
            /fp:fast
            /Yupch.h

            $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

            # debug
            $<$<CONFIG:DEBUG>:/Od /Gm>
            # release
            $<$<CONFIG:RELEASE>:/O2 /Gy /Oi>
    )

    target_include_directories(directxtkaudio
        PUBLIC 
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/Audio>
        PRIVATE
            Inc
            Src
    )

    target_compile_definitions(directxtkaudio
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -D_WIN32_WINNT=0x0602
            -D_WIN7_PLATFORM_UPDATE
            -DWIN32
    )

    set_source_files_properties(Audio/AudioEngine.cpp PROPERTIES COMPILE_FLAGS /Ycpch.h)

    # ide filters
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${DIRECTXTKAUDIO_SOURCES})
endif()
