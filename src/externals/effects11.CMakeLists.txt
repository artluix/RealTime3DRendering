cmake_minimum_required(VERSION 3.2 FATAL_ERROR)

if(APPLICATION)
    project(effects11)

    set(EFFECTS11_SOURCES
        # Binary
        Binary/EffectBinaryFormat.h
        Binary/EffectStateBase11.h
        Binary/EffectStates11.h
        Binary/SOParser.h

        # inc
        inc/d3dx11effect.h
        inc/d3dxGlobal.h

        # root folder
        d3dxGlobal.cpp
        Effect.h
        EffectAPI.cpp
        EffectLoad.h
        EffectLoad.cpp
        EffectNonRuntime.cpp
        EffectReflection.cpp
        EffectRuntime.cpp
        EffectVariable.inl
        IUnknownImp.h
        pchfx.h
    )

    add_library(effects11 STATIC ${EFFECTS11_SOURCES})

    target_include_directories(effects11
        PUBLIC
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/inc>
        PRIVATE
            Binary
            inc
    )

    target_compile_options(effects11
        PRIVATE
            /W3
            /fp:fast
            /openmp-
            /GR-
            /Yupchfx.h
            /MP

            $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

            # debug
            $<$<CONFIG:DEBUG>: /Od /RTC1>

            # release
            $<$<CONFIG:RELEASE>: /MD /O2 /Gy /Oi>
    )

    target_compile_definitions(effects11
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -DD3DXFX_LARGEADDRESS_HANDLE
            -D_WIN7_PLATFORM_UPDATE
            -D_WIN32_WINNT=0x0600
            -DWIN32
    )

    set_source_files_properties(d3dxGlobal.cpp PROPERTIES COMPILE_FLAGS /Ycpchfx.h)

    # ide filters
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${EFFECTS11_SOURCES})
endif()