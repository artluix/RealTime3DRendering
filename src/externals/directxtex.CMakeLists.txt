cmake_minimum_required(VERSION 3.2 FATAL_ERROR)


project(directxtex)

set(DIRECTXTEX_SOURCES
    # sources
    directxtex/BC.h
    directxtex/BC.cpp
    directxtex/BC4BC5.cpp
    directxtex/BC6HBC7.cpp
    directxtex/BCDirectCompute.h
    directxtex/DDS.h
    directxtex/filters.h
    directxtex/scoped.h
    directxtex/DirectXTex.h
    directxtex/DirectXTexP.h
    directxtex/DirectXTex.inl
    directxtex/BCDirectCompute.cpp
    directxtex/DirectXTexCompress.cpp
    directxtex/DirectXTexCompressGPU.cpp
    directxtex/DirectXTexConvert.cpp
    directxtex/DirectXTexD3D11.cpp
    directxtex/DirectXTexDDS.cpp
    directxtex/DirectXTexFlipRotate.cpp
    directxtex/DirectXTexHDR.cpp
    directxtex/DirectXTexImage.cpp
    directxtex/DirectXTexMipMaps.cpp
    directxtex/DirectXTexMisc.cpp
    directxtex/DirectXTexNormalMaps.cpp
    directxtex/DirectXTexPMAlpha.cpp
    directxtex/DirectXTexResize.cpp
    directxtex/DirectXTexTGA.cpp
    directxtex/DirectXTexUtil.cpp
    directxtex/DirectXTexWIC.cpp

    # compiled shaders
    directxtex/Shaders/Compiled/BC6HEncode_EncodeBlockCS.inc
    directxtex/Shaders/Compiled/BC6HEncode_EncodeBlockCS.pdb
    directxtex/Shaders/Compiled/BC6HEncode_TryModeG10CS.inc
    directxtex/Shaders/Compiled/BC6HEncode_TryModeG10CS.pdb
    directxtex/Shaders/Compiled/BC6HEncode_TryModeLE10CS.inc
    directxtex/Shaders/Compiled/BC6HEncode_TryModeLE10CS.pdb
    directxtex/Shaders/Compiled/BC7Encode_EncodeBlockCS.inc
    directxtex/Shaders/Compiled/BC7Encode_EncodeBlockCS.pdb
    directxtex/Shaders/Compiled/BC7Encode_TryMode02CS.inc
    directxtex/Shaders/Compiled/BC7Encode_TryMode02CS.pdb
    directxtex/Shaders/Compiled/BC7Encode_TryMode137CS.inc
    directxtex/Shaders/Compiled/BC7Encode_TryMode137CS.pdb
    directxtex/Shaders/Compiled/BC7Encode_TryMode456CS.inc
    directxtex/Shaders/Compiled/BC7Encode_TryMode456CS.pdb
    # directxtex/Shaders/CompileShaders.cmd
)

set(DIRECTXTEX_SHADER_SOURCES
    directxtex/Shaders/BC6HEncode.hlsl
    directxtex/Shaders/BC7Encode.hlsl
)

set(DIRECTXTEX_ADDITIONAL_SOURCES
    # DDSTextureLoader
    DDSTextureLoader/DDSTextureLoader.h
    DDSTextureLoader/DDSTextureLoader12.h
    DDSTextureLoader/DDSTextureLoader.cpp
    DDSTextureLoader/DDSTextureLoader12.cpp

    # WICTextureLoader
    WICTextureLoader/WICTextureLoader.h
    WICTextureLoader/WICTextureLoader12.h
    WICTextureLoader/WICTextureLoader.cpp
    WICTextureLoader/WICTextureLoader12.cpp

    # ScreenGrab(aka screenshot)
    ScreenGrab/ScreenGrab.h
    ScreenGrab/ScreenGrab12.h
    ScreenGrab/ScreenGrab.cpp
    ScreenGrab/ScreenGrab12.cpp
)

add_library(directxtex STATIC ${DIRECTXTEX_SOURCES} ${DIRECTXTEX_SHADER_SOURCES} ${DIRECTXTEX_ADDITIONAL_SOURCES})

target_include_directories(directxtex
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
    PRIVATE
        directxtex
        .
)

target_compile_options(directxtex
    PRIVATE
        /W3
        /fp:fast
        /openmp

        $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

        # /permissive-
        /YuDirectXTexP.h
        /sdl

        /MP

        # debug
        $<$<CONFIG:DEBUG>: /Od>

        # release
        $<$<CONFIG:RELEASE>: /MD /O2 /Gy /Oi>
)

target_compile_definitions(directxtex
    PUBLIC
        -DUNICODE
        -D_UNICODE
        -D_WIN32_WINNT=0x0600
        -D_WIN7_PLATFORM_UPDATE
        -DWIN32
        -D_CRT_STDIO_ARBITRARY_WIDE_SPECIFIERS
        -D_LIB
)

# avoid compilation of shaders (enabled by default)
set_source_files_properties(${DIRECTXTEX_SHADER_SOURCES} PROPERTIES VS_TOOL_OVERRIDE "None")

# avoid compilation of additional sources
set_source_files_properties(${DIRECTXTEX_ADDITIONAL_SOURCES} PROPERTIES HEADER_FILE_ONLY ON)

set_source_files_properties(directxtex/DirectXTexUtil.cpp PROPERTIES COMPILE_FLAGS /YcDirectXTexP.h)

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${DIRECTXTEX_SOURCES} ${DIRECTXTEX_SHADER_SOURCES} ${DIRECTXTEX_ADDITIONAL_SOURCES})

# tools
if(TOOLS)
    # ddsview
    project(ddsview)

    set(DDSVIEW_SOURCES
        DDSView/ddsview.cpp
        DDSView/DDSView.rc
        DDSView/ddsview.fx
    )

    add_executable(ddsview WIN32 ${DDSVIEW_SOURCES})
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${DDSVIEW_SOURCES})

    target_include_directories(ddsview
        PRIVATE
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/DirectXTex>
    )

    target_compile_options(ddsview
        PRIVATE
            /W4
            /fp:fast

            $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

            /guard:cf
            /sdl

            /MP

            # debug
            $<$<CONFIG:DEBUG>: /Od>

            # release
            $<$<CONFIG:RELEASE>: /MD /O2 /Gy /Oi>
    )

    target_compile_definitions(ddsview
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -D_WIN32_WINNT=0x0600
            -DWIN32
            -DPROFILE
    )

    target_link_libraries(ddsview directxtex d3d11 ole32 windowscodecs uuid)

    set_target_properties(ddsview PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
    set_target_properties(ddsview PROPERTIES LINK_FLAGS_DEBUG /DEBUG:FASTLINK)
    set_target_properties(ddsview PROPERTIES LINK_FLAGS_RELEASE /OPT:REF)

    install(TARGETS ddsview
        RUNTIME DESTINATION ${TOOLS_DIR}/bin/ddsview/${CMAKE_VS_PLATFORM_NAME}
    )

    # texassemble
    project(texassemble)

    set(TEXASSEMBLE_SOURCES
        Texassemble/texassemble.cpp
        Texassemble/texassemble.rc
    )

    add_executable(texassemble ${TEXASSEMBLE_SOURCES})
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${TEXASSEMBLE_SOURCES})

    target_include_directories(texassemble
        PRIVATE
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/DirectXTex>
    )

    target_compile_options(texassemble
        PRIVATE
            /W4
            /fp:fast

            $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

            /guard:cf
            /sdl

            /MP

            # debug
            $<$<CONFIG:DEBUG>: /Od>

            # release
            $<$<CONFIG:RELEASE>: /MD /O2 /Gy /Oi>
    )

    target_compile_definitions(texassemble
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -D_WIN32_WINNT=0x0600
            -DWIN32
            -DPROFILE
    )

    target_link_libraries(texassemble directxtex ole32 windowscodecs uuid)

    set_target_properties(texassemble PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
    set_target_properties(texassemble PROPERTIES LINK_FLAGS_DEBUG /DEBUG:FASTLINK)
    set_target_properties(texassemble PROPERTIES LINK_FLAGS_RELEASE /OPT:REF)

    install(TARGETS texassemble
        RUNTIME DESTINATION ${TOOLS_DIR}/bin/texassemble/${CMAKE_VS_PLATFORM_NAME}
    )

    # texconv
    project(texconv)

    set(TEXCONV_SOURCES
        Texconv/texconv.cpp
        Texconv/texconv.rc
    )

    add_executable(texconv ${TEXCONV_SOURCES})
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${TEXCONV_SOURCES})

    target_include_directories(texconv
        PRIVATE
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/DirectXTex>
    )

    target_compile_options(texconv
        PRIVATE
            /W4
            /fp:fast

            $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

            /guard:cf
            /sdl

            /MP

            /openmp

            # debug
            $<$<CONFIG:DEBUG>: /Od>

            # release
            $<$<CONFIG:RELEASE>: /MD /O2 /Gy /Oi>
    )

    target_compile_definitions(texconv
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -D_WIN32_WINNT=0x0600
            -DD3DXFX_LARGEADDRESS_HANDLE
            -DWIN32
            -DPROFILE
    )

    target_link_libraries(texconv directxtex ole32 windowscodecs uuid)

    set_target_properties(texconv PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
    set_target_properties(texconv PROPERTIES LINK_FLAGS_DEBUG /DEBUG:FASTLINK)
    set_target_properties(texconv PROPERTIES LINK_FLAGS_RELEASE /OPT:REF)

    install(TARGETS texconv
        RUNTIME DESTINATION ${TOOLS_DIR}/bin/texconv/${CMAKE_VS_PLATFORM_NAME}
    )

    # texdiag
    project(texdiag)

    set(TEXDIAG_SOURCES
        Texdiag/texdiag.cpp
        Texdiag/texdiag.rc
    )

    add_executable(texdiag ${TEXDIAG_SOURCES})
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${TEXDIAG_SOURCES})

    target_include_directories(texdiag
        PRIVATE
            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/DirectXTex>
    )

    target_compile_options(texdiag
        PRIVATE
            /W4
            /fp:fast

            $<$<BOOL:${IS_WIN32}>: /arch:SSE2>

            /guard:cf
            /sdl

            /MP

            # debug
            $<$<CONFIG:DEBUG>: /Od>

            # release
            $<$<CONFIG:RELEASE>: /MD /O2 /Gy /Oi>
    )

    target_compile_definitions(texdiag
        PUBLIC
            -DUNICODE
            -D_UNICODE
            -D_WIN32_WINNT=0x0600
            -DWIN32
            -DPROFILE
    )

    target_link_libraries(texdiag directxtex ole32 windowscodecs uuid)

    set_target_properties(texdiag PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
    set_target_properties(texdiag PROPERTIES LINK_FLAGS_DEBUG /DEBUG:FASTLINK)
    set_target_properties(texdiag PROPERTIES LINK_FLAGS_RELEASE /OPT:REF)

    install(TARGETS texdiag
        RUNTIME DESTINATION ${TOOLS_DIR}/bin/texdiag/${CMAKE_VS_PLATFORM_NAME}
    )

endif()