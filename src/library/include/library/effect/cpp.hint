#define RTTI_CLASS_BASE(Class)														\
public:																				\
virtual bool Is(const library::rtti::TypeId typeId) const							\
{																					\
	return library::rtti::GetTypeId<Class>() == typeId;								\
}																					\
virtual library::rtti::TypeId GetTypeId() const										\
{																					\
	return library::rtti::GetTypeId<Class>();										\
}																					\
virtual void* CastTo(const library::rtti::TypeId typeId)							\
{																					\
	if (library::rtti::GetTypeId<Class>() == typeId)								\
		return static_cast<Class*>(this);											\
																					\
	return nullptr;																	\
}																					\
virtual const void* CastTo(const library::rtti::TypeId typeId) const				\
{																					\
	if (library::rtti::GetTypeId<Class>() == typeId)								\
		return const_cast<Class*>(static_cast<const Class*>(this));					\
																					\
	return nullptr;																	\
}																					\
template <class T>																	\
T* As()																				\
{																					\
	return static_cast<T*>(CastTo(library::rtti::GetTypeId<T>()));					\
}																					\
template <class T>																	\
const T* As() const																	\
{																					\
	return static_cast<const T*>(CastTo(library::rtti::GetTypeId<T>()));			\
}

//-------------------------------------------------------------------------

#define RTTI_CLASS(Class, ...)														\
public:																				\
library::rtti::TypeId GetTypeId() const override									\
{																					\
	return library::rtti::GetTypeId<Class>();										\
}																					\
bool Is(const library::rtti::TypeId typeId) const override							\
{																					\
	return !!CastTo(typeId);														\
}																					\
void* CastTo(const library::rtti::TypeId typeId) override							\
{																					\
	auto self = static_cast<Class*>(this);											\
	if (library::rtti::GetTypeId<Class>() ==  typeId)								\
		return self;																\
																					\
	return library::rtti::detail::ParentCast<Class, __VA_ARGS__>()(self, typeId);	\
}																					\
const void* CastTo(const library::rtti::TypeId typeId) const override				\
{																					\
	auto self = const_cast<Class*>(static_cast<const Class*>(this));				\
	if (library::rtti::GetTypeId<Class>() == typeId)								\
		return self;																\
																					\
	return library::rtti::detail::ParentCast<Class, __VA_ARGS__>()(self, typeId);	\
}